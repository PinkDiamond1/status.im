pipeline {
  agent { label 'linux' }

  options {
    disableConcurrentBuilds()
    /* manage how many builds we keep */
    buildDiscarder(logRotator(
      numToKeepStr: '20',
      daysToKeepStr: '30',
    ))
  }

  environment {
    GIT_AUTHOR_NAME = 'status-im-auto'
    GIT_AUTHOR_EMAIL = 'auto@status.im'
    MSG = 'data: update employees'
  }

  stages {
    stage('Deps') {
      steps {
        sh 'yarn install'
      }
    }

    stage('Employees') {
      steps { script {
        withCredentials([string(
          credentialsId: 'bamboo-hr-token',
          variable: 'BAMBOO_API_TOKEN',
        )]) {
          sh 'yarn run employees'
        }
        dataChanged = sh(
          script: 'git ls-files -m',
          returnStdout: true
        ).trim()
      } }
    }

    stage('Commit') {
      when { expression { dataChanged } }
      steps {
        sh "git commit -m '${MSG}' source/_data"
      }
    }

    stage('Rebase') {
      when { expression { dataChanged } }
      steps {
        sh 'git checkout master'
        sh 'git rebase develop'
      }
    }

    stage('Push') {
      when { expression { dataChanged } }
      steps {
        sshagent(credentials: ['status-im-auto-ssh']) {
          sh 'git pull --rebase origin develop'
          sh 'git push origin develop'
          sh 'git push origin master'
        }
      }
    }
  }
  post {
    always { cleanWs() }
  }
}
